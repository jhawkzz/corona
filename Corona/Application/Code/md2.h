
#ifndef MD2_H_
#define MD2_H_

#define MAX_MD2_TRIANGLES (4096)
#define MAX_MD2_VERTICES  (2048)
#define MAX_MD2_TEX_COORD (2048)
#define MAX_MD2_FRAMES     (512)
#define MAX_MD2_SKINS       (32)

#define MODEL_IDENT      (844121161)
#define MODEL_VERSION    (8)
#define PRECAL_NORM 162

// This loads the Quake II model format.
// This information taken from the glorious site: http://tfc.duke.free.fr/coding/md2-specs-en.html

static float normal_lookup[ PRECAL_NORM ][ 3 ] =
{
   { -0.525731f, 0.000000f, 0.850651f }, 
   { -0.442863f, 0.238856f, 0.864188f }, 
   { -0.295242f, 0.000000f, 0.955423f }, 
   { -0.309017f, 0.500000f, 0.809017f }, 
   { -0.162460f, 0.262866f, 0.951056f }, 
   { 0.000000f, 0.000000f, 1.000000f }, 
   { 0.000000f, 0.850651f, 0.525731f }, 
   { -0.147621f, 0.716567f, 0.681718f }, 
   { 0.147621f, 0.716567f, 0.681718f }, 
   { 0.000000f, 0.525731f, 0.850651f }, 
   { 0.309017f, 0.500000f, 0.809017f }, 
   { 0.525731f, 0.000000f, 0.850651f }, 
   { 0.295242f, 0.000000f, 0.955423f }, 
   { 0.442863f, 0.238856f, 0.864188f }, 
   { 0.162460f, 0.262866f, 0.951056f }, 
   { -0.681718f, 0.147621f, 0.716567f }, 
   { -0.809017f, 0.309017f, 0.500000f }, 
   { -0.587785f, 0.425325f, 0.688191f }, 
   { -0.850651f, 0.525731f, 0.000000f }, 
   { -0.864188f, 0.442863f, 0.238856f }, 
   { -0.716567f, 0.681718f, 0.147621f }, 
   { -0.688191f, 0.587785f, 0.425325f }, 
   { -0.500000f, 0.809017f, 0.309017f }, 
   { -0.238856f, 0.864188f, 0.442863f }, 
   { -0.425325f, 0.688191f, 0.587785f }, 
   { -0.716567f, 0.681718f, -0.147621f },
   { -0.500000f, 0.809017f, -0.309017f },
   { -0.525731f, 0.850651f, 0.000000f }, 
   { 0.000000f, 0.850651f, -0.525731f }, 
   { -0.238856f, 0.864188f, -0.442863f },
   { 0.000000f, 0.955423f, -0.295242f }, 
   { -0.262866f, 0.951056f, -0.162460f },
   { 0.000000f, 1.000000f, 0.000000f }, 
   { 0.000000f, 0.955423f, 0.295242f }, 
   { -0.262866f, 0.951056f, 0.162460f },
   { 0.238856f, 0.864188f, 0.442863f },
   { 0.262866f, 0.951056f, 0.162460f }, 
   { 0.500000f, 0.809017f, 0.309017f }, 
   { 0.238856f, 0.864188f, -0.442863f },
   { 0.262866f, 0.951056f, -0.162460f },
   { 0.500000f, 0.809017f, -0.309017f },
   { 0.850651f, 0.525731f, 0.000000f }, 
   { 0.716567f, 0.681718f, 0.147621f }, 
   { 0.716567f, 0.681718f, -0.147621f },
   { 0.525731f, 0.850651f, 0.000000f }, 
   { 0.425325f, 0.688191f, 0.587785f }, 
   { 0.864188f, 0.442863f, 0.238856f }, 
   { 0.688191f, 0.587785f, 0.425325f }, 
   { 0.809017f, 0.309017f, 0.500000f }, 
   { 0.681718f, 0.147621f, 0.716567f }, 
   { 0.587785f, 0.425325f, 0.688191f }, 
   { 0.955423f, 0.295242f, 0.000000f }, 
   { 1.000000f, 0.000000f, 0.000000f }, 
   { 0.951056f, 0.162460f, 0.262866f }, 
   { 0.850651f, -0.525731f, 0.000000f }, 
   { 0.955423f, -0.295242f, 0.000000f }, 
   { 0.864188f, -0.442863f, 0.238856f }, 
   { 0.951056f, -0.162460f, 0.262866f }, 
   { 0.809017f, -0.309017f, 0.500000f }, 
   { 0.681718f, -0.147621f, 0.716567f }, 
   { 0.850651f, 0.000000f, 0.525731f }, 
   { 0.864188f, 0.442863f, -0.238856f },
   { 0.809017f, 0.309017f, -0.500000f },
   { 0.951056f, 0.162460f, -0.262866f },
   { 0.525731f, 0.000000f, -0.850651f },
   { 0.681718f, 0.147621f, -0.716567f },
   { 0.681718f, -0.147621f, -0.716567f },
   { 0.850651f, 0.000000f, -0.525731f }, 
   { 0.809017f, -0.309017f, -0.500000f }, 
   { 0.864188f, -0.442863f, -0.238856f }, 
   { 0.951056f, -0.162460f, -0.262866f }, 
   { 0.147621f, 0.716567f, -0.681718f }, 
   { 0.309017f, 0.500000f, -0.809017f }, 
   { 0.425325f, 0.688191f, -0.587785f }, 
   { 0.442863f, 0.238856f, -0.864188f }, 
   { 0.587785f, 0.425325f, -0.688191f }, 
   { 0.688191f, 0.587785f, -0.425325f }, 
   { -0.147621f, 0.716567f, -0.681718f },
   { -0.309017f, 0.500000f, -0.809017f },
   { 0.000000f, 0.525731f, -0.850651f }, 
   { -0.525731f, 0.000000f, -0.850651f },
   { -0.442863f, 0.238856f, -0.864188f },
   { -0.295242f, 0.000000f, -0.955423f },
   { -0.162460f, 0.262866f, -0.951056f },
   { 0.000000f, 0.000000f, -1.000000f }, 
   { 0.295242f, 0.000000f, -0.955423f }, 
   { 0.162460f, 0.262866f, -0.951056f }, 
   { -0.442863f, -0.238856f, -0.864188f },
   { -0.309017f, -0.500000f, -0.809017f },
   { -0.162460f, -0.262866f, -0.951056f }, 
   { 0.000000f, -0.850651f, -0.525731f }, 
   { -0.147621f, -0.716567f, -0.681718f },
   { 0.147621f, -0.716567f, -0.681718f },
   { 0.000000f, -0.525731f, -0.850651f }, 
   { 0.309017f, -0.500000f, -0.809017f }, 
   { 0.442863f, -0.238856f, -0.864188f }, 
   { 0.162460f, -0.262866f, -0.951056f }, 
   { 0.238856f, -0.864188f, -0.442863f }, 
   { 0.500000f, -0.809017f, -0.309017f }, 
   { 0.425325f, -0.688191f, -0.587785f }, 
   { 0.716567f, -0.681718f, -0.147621f }, 
   { 0.688191f, -0.587785f, -0.425325f }, 
   { 0.587785f, -0.425325f, -0.688191f }, 
   { 0.000000f, -0.955423f, -0.295242f }, 
   { 0.000000f, -1.000000f, 0.000000f },
   { 0.262866f, -0.951056f, -0.162460f },
   { 0.000000f, -0.850651f, 0.525731f }, 
   { 0.000000f, -0.955423f, 0.295242f }, 
   { 0.238856f, -0.864188f, 0.442863f }, 
   { 0.262866f, -0.951056f, 0.162460f }, 
   { 0.500000f, -0.809017f, 0.309017f }, 
   { 0.716567f, -0.681718f, 0.147621f }, 
   { 0.525731f, -0.850651f, 0.000000f }, 
   { -0.238856f, -0.864188f, -0.442863f },
   { -0.500000f, -0.809017f, -0.309017f },
   { -0.262866f, -0.951056f, -0.162460f },
   { -0.850651f, -0.525731f, 0.000000f }, 
   { -0.716567f, -0.681718f, -0.147621f },
   { -0.716567f, -0.681718f, 0.147621f }, 
   { -0.525731f, -0.850651f, 0.000000f }, 
   { -0.500000f, -0.809017f, 0.309017f }, 
   { -0.238856f, -0.864188f, 0.442863f }, 
   { -0.262866f, -0.951056f, 0.162460f }, 
   { -0.864188f, -0.442863f, 0.238856f }, 
   { -0.809017f, -0.309017f, 0.500000f }, 
   { -0.688191f, -0.587785f, 0.425325f }, 
   { -0.681718f, -0.147621f, 0.716567f }, 
   { -0.442863f, -0.238856f, 0.864188f }, 
   { -0.587785f, -0.425325f, 0.688191f }, 
   { -0.309017f, -0.500000f, 0.809017f }, 
   { -0.147621f, -0.716567f, 0.681718f }, 
   { -0.425325f, -0.688191f, 0.587785f }, 
   { -0.162460f, -0.262866f, 0.951056f }, 
   { 0.442863f, -0.238856f, 0.864188f }, 
   { 0.162460f, -0.262866f, 0.951056f }, 
   { 0.309017f, -0.500000f, 0.809017f }, 
   { 0.147621f, -0.716567f, 0.681718f }, 
   { 0.000000f, -0.525731f, 0.850651f }, 
   { 0.425325f, -0.688191f, 0.587785f }, 
   { 0.587785f, -0.425325f, 0.688191f }, 
   { 0.688191f, -0.587785f, 0.425325f }, 
   { -0.955423f, 0.295242f, 0.000000f }, 
   { -0.951056f, 0.162460f, 0.262866f }, 
   { -1.000000f, 0.000000f, 0.000000f }, 
   { -0.850651f, 0.000000f, 0.525731f }, 
   { -0.955423f, -0.295242f, 0.000000f },
   { -0.951056f, -0.162460f, 0.262866f },
   { -0.864188f, 0.442863f, -0.238856f }, 
   { -0.951056f, 0.162460f, -0.262866f }, 
   { -0.809017f, 0.309017f, -0.500000f }, 
   { -0.864188f, -0.442863f, -0.238856f }, 
   { -0.951056f, -0.162460f, -0.262866f },
   { -0.809017f, -0.309017f, -0.500000f },
   { -0.681718f, 0.147621f, -0.716567f }, 
   { -0.681718f, -0.147621f, -0.716567f },
   { -0.850651f, 0.000000f, -0.525731f }, 
   { -0.688191f, 0.587785f, -0.425325f }, 
   { -0.587785f, 0.425325f, -0.688191f }, 
   { -0.425325f, 0.688191f, -0.587785f }, 
   { -0.425325f, -0.688191f, -0.587785f }, 
   { -0.587785f, -0.425325f, -0.688191f }, 
   { -0.688191f, -0.587785f, -0.425325f } 
};

typedef struct
{
    int ident;          /* magic number: "IDP2" */
    int version;        /* version: must be 8 */

    int skinwidth;      /* texture width */
    int skinheight;     /* texture height */

    int framesize;      /* size in bytes of a frame */

    int num_skins;      /* number of skins */
    int num_vertices;   /* number of vertices per frame */
    int num_st;         /* number of texture coordinates */
    int num_tris;       /* number of triangles */
    int num_glcmds;     /* number of opengl commands */
    int num_frames;     /* number of frames */

    int offset_skins;   /* offset skin data */
    int offset_st;      /* offset texture coordinate data */
    int offset_tris;    /* offset triangle data */
    int offset_frames;  /* offset frame data */
    int offset_glcmds;  /* offset OpenGL command data */
    int offset_end;     /* offset end of file */

} md2_header_t;

/* vector */
typedef float vec3_t[3];

/* texture name */
typedef struct
{
    char name[64];   /* texture file name */

} md2_skin_t;

/* texture coords */
typedef struct
{
    short s;
    short t;

} md2_texCoord_t;

/* triangle data */
typedef struct
{
    unsigned short vertex[3];   /* vertex indices of the triangle */
    unsigned short st[3];       /* tex. coord. indices */

} md2_triangle_t;

/* vertex data */
typedef struct
{
    unsigned char v[3];         /* position */
    unsigned char normalIndex;  /* normal vector index */

} md2_vertex_t;

/* frame data */
typedef struct
{
    vec3_t          scale;      /* scale factor */
    vec3_t          translate;  /* translation vector */
    char            name[16];   /* frame name */
    md2_vertex_t    *verts;     /* list of frame's vertices */

} md2_frame_t;

typedef struct
{
   short ** p_tex;
   int      tex_size;
}
md2_skin_data;

/* md2 model structure */
typedef struct
{
  md2_header_t header;

  md2_skin_t *skins;
  md2_texCoord_t *texcoords;
  md2_triangle_t *triangles;
  md2_frame_t *frames;
  int *glcmds;

} md2_model_t;

class MD2
{
   public:

      BOOL           Load         ( char * filename );
      BOOL           Load_Textures( char *pTextureDir );
      void           UnLoad       ( void );
      
      md2_model_t    m_model;
      md2_skin_data  m_skin_data;

};

#endif
